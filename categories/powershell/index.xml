<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>powershell on Sam Martin</title>
    <link>https://sammart.in/categories/powershell/</link>
    <description>Recent content in powershell on Sam Martin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Mon, 22 Feb 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://sammart.in/categories/powershell/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Integration Testing AD Dependent Cookbooks and PowerShell Scripts with Test-Kitchen</title>
      <link>https://sammart.in/post/integration-testing-ad-dependent-cookbooks-and-powershell-scripts-with-test-kitchen/</link>
      <pubDate>Mon, 22 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://sammart.in/post/integration-testing-ad-dependent-cookbooks-and-powershell-scripts-with-test-kitchen/</guid>
      <description>I remember a little while ago, well… over a couple of years ago now… that I’d just learned about Chef and Vagrant, and was introducing one of my co-workers to the ecosystem (somewhat over-enthusiastically), and wanted to help him perform his immediate deployment task using Chef. That deployment task happened to be to deploy and configure a Remote Desktop Gateway. So we spun up a Windows 2012R2 Vagrant box, use the Windows cookbook to add the appropriate Windows feature, ran it, and bam, brick wall.</description>
    </item>
    
    <item>
      <title>Getting Started with Chef on Windows Server - Part 1 Intro</title>
      <link>https://sammart.in/post/getting-started-with-chef-on-windows-server/</link>
      <pubDate>Sun, 24 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>https://sammart.in/post/getting-started-with-chef-on-windows-server/</guid>
      <description>I’ve never had the opportunity to work with configuration management software, but a recent project has pushed me over the edge from “Wow, that sounds really cool in theory!” to “Well, I’d better get my feet wet!”.
As the learnchef.com’s Windows page is currently under construction, I thought I’d write my efforts up to help anyone who might also be getting their feet wet for the first time in the configuration management space using Chef on Windows.</description>
    </item>
    
    <item>
      <title>LeanKit integration with ticketing system (using PowerShell)</title>
      <link>https://sammart.in/post/leankit-integration-with-ticketing-system-using-powershell/</link>
      <pubDate>Sun, 20 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://sammart.in/post/leankit-integration-with-ticketing-system-using-powershell/</guid>
      <description>I’m no expert on Kanban by any means, but ever since reading The Phoenix Project, I’ve been dying to try it out in the workplace.
For me, there are four key things that I think Kanban can help us do that our current tools can’t:
 Identify queue time &amp;amp; bottlenecks Visualise Work In Process (WIP) Prioritise work (Queued or In Process) Promote mono-tasking by enforcing WIP limits  History However, we’ve recently come out the far side of a meta-project to improve the visibility and predicitability of project work by introducing a tool called Clarizen, which has resulted in the tool being scrapped.</description>
    </item>
    
    <item>
      <title>Using the LeanKit API with PowerShell</title>
      <link>https://sammart.in/post/using-the-leankit-api-with-powershell/</link>
      <pubDate>Sun, 20 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://sammart.in/post/using-the-leankit-api-with-powershell/</guid>
      <description>As I alluded to in an earlier post, I’ve been using PowerShell to interact with theLeanKit API. You can find the rationale and overarching methodology in the post linked above. Here we’ll be dealing with the nuts and bolts.
Approach 1 – Using the .NET framework provided by LeanKit (FIXED by John Mathias) Initially I attempted to perform this task by importing the LeanKit API Client Library for .NET into PowerShell using* [System.</description>
    </item>
    
  </channel>
</rss>