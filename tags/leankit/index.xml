<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>leankit on Sam Martin</title>
    <link>https://sammart.in/tags/leankit/</link>
    <description>Recent content in leankit on Sam Martin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Sun, 20 Apr 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://sammart.in/tags/leankit/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>LeanKit integration with ticketing system (using PowerShell)</title>
      <link>https://sammart.in/post/leankit-integration-with-ticketing-system-using-powershell/</link>
      <pubDate>Sun, 20 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://sammart.in/post/leankit-integration-with-ticketing-system-using-powershell/</guid>
      <description>I’m no expert on Kanban by any means, but ever since reading The Phoenix Project, I’ve been dying to try it out in the workplace.
For me, there are four key things that I think Kanban can help us do that our current tools can’t:
 Identify queue time &amp;amp; bottlenecks Visualise Work In Process (WIP) Prioritise work (Queued or In Process) Promote mono-tasking by enforcing WIP limits  History However, we’ve recently come out the far side of a meta-project to improve the visibility and predicitability of project work by introducing a tool called Clarizen, which has resulted in the tool being scrapped.</description>
    </item>
    
    <item>
      <title>Using the LeanKit API with PowerShell</title>
      <link>https://sammart.in/post/using-the-leankit-api-with-powershell/</link>
      <pubDate>Sun, 20 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://sammart.in/post/using-the-leankit-api-with-powershell/</guid>
      <description>As I alluded to in an earlier post, I’ve been using PowerShell to interact with theLeanKit API. You can find the rationale and overarching methodology in the post linked above. Here we’ll be dealing with the nuts and bolts.
Approach 1 – Using the .NET framework provided by LeanKit (FIXED by John Mathias) Initially I attempted to perform this task by importing the LeanKit API Client Library for .NET into PowerShell using* [System.</description>
    </item>
    
  </channel>
</rss>